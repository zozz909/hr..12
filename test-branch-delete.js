// ุงุฎุชุจุงุฑ ุญุฐู ุงููุฑุน
const mysql = require('mysql2/promise');

async function testBranchDelete() {
  let connection;
  
  try {
    // ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '123',
      database: 'hr_system'
    });

    console.log('๐ ูุชุตู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');

    // ุนุฑุถ ุฌููุน ุงููุฑูุน ูุจู ุงูุญุฐู
    console.log('\n๐ ุงููุฑูุน ุงูููุฌูุฏุฉ ูุจู ุงูุญุฐู:');
    const [branchesBefore] = await connection.execute('SELECT id, name, status FROM branches ORDER BY name');
    branchesBefore.forEach(branch => {
      console.log(`   - ${branch.name} (${branch.id}) - ${branch.status}`);
    });

    if (branchesBefore.length === 0) {
      console.log('   ูุง ุชูุฌุฏ ูุฑูุน ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
      return;
    }

    // ุงุฎุชูุงุฑ ุฃูู ูุฑุน ููุญุฐู
    const branchToDelete = branchesBefore[0];
    console.log(`\n๐๏ธ ุณูุชู ุญุฐู ุงููุฑุน: ${branchToDelete.name} (${branchToDelete.id})`);

    // ุชุญุฏูุซ ุงูููุธููู ุงููุฑุชุจุทูู ุจุงููุฑุน
    console.log('๐ ุชุญุฏูุซ ุงูููุธููู ุงููุฑุชุจุทูู ุจุงููุฑุน...');
    const [updateResult] = await connection.execute(
      'UPDATE employees SET branch_id = NULL WHERE branch_id = ?',
      [branchToDelete.id]
    );
    console.log(`   ุชู ุชุญุฏูุซ ${updateResult.affectedRows} ููุธู`);

    // ุญุฐู ุงููุฑุน
    console.log('๐๏ธ ุญุฐู ุงููุฑุน ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    const [deleteResult] = await connection.execute(
      'DELETE FROM branches WHERE id = ?',
      [branchToDelete.id]
    );
    console.log(`   ุชู ุญุฐู ${deleteResult.affectedRows} ูุฑุน`);

    // ุนุฑุถ ุงููุฑูุน ุจุนุฏ ุงูุญุฐู
    console.log('\n๐ ุงููุฑูุน ุงูููุฌูุฏุฉ ุจุนุฏ ุงูุญุฐู:');
    const [branchesAfter] = await connection.execute('SELECT id, name, status FROM branches ORDER BY name');
    if (branchesAfter.length === 0) {
      console.log('   ูุง ุชูุฌุฏ ูุฑูุน ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
    } else {
      branchesAfter.forEach(branch => {
        console.log(`   - ${branch.name} (${branch.id}) - ${branch.status}`);
      });
    }

    // ุงูุชุญูู ูู ูุฌุงุญ ุงูุญุฐู
    if (deleteResult.affectedRows > 0) {
      console.log('\nโ ุชู ุญุฐู ุงููุฑุน ุจูุฌุงุญ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช!');
    } else {
      console.log('\nโ ูุดู ูู ุญุฐู ุงููุฑุน ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช!');
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุญุฐู ุงููุฑุน:', error.message);
  } finally {
    if (connection) {
      await connection.end();
      console.log('๐ ุชู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    }
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testBranchDelete();
