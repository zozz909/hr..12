// ุงุณุชุฎุฏุงู fetch ุงููุฏูุฌ ูู Node.js 18+
const fetch = globalThis.fetch;

async function testNoSettings() {
  const baseUrl = 'http://localhost:9004';
  
  console.log('๐งช ุงุฎุชุจุงุฑ ุงููุธุงู ุจุฏูู ุฅุนุฏุงุฏุงุช...\n');

  try {
    // ุงุฎุชุจุงุฑ 1: ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฏูุฑ
    console.log('๐ ุงุฎุชุจุงุฑ 1: ุชุณุฌูู ุงูุฏุฎูู ุจุงููุฏูุฑ...');
    const adminLogin = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'admin@company.com',
        password: 'admin123'
      }),
    });

    const adminData = await adminLogin.json();
    if (!adminData.success) {
      console.log('โ ูุดู ุชุณุฌูู ุฏุฎูู ุงููุฏูุฑ:', adminData.error);
      return;
    }

    console.log('โ ูุฌุญ ุชุณุฌูู ุฏุฎูู ุงููุฏูุฑ');
    console.log(`   ๐ค ุงูุงุณู: ${adminData.user.name}`);
    console.log(`   ๐ญ ุงูุฏูุฑ: ${adminData.user.role}`);
    
    const adminToken = adminData.token;

    // ุงุฎุชุจุงุฑ 2: ูุญุงููุฉ ุงููุตูู ูุตูุญุงุช ุงูุฅุนุฏุงุฏุงุช (ูุฌุจ ุฃู ุชูุดู)
    console.log('\n๐ซ ุงุฎุชุจุงุฑ 2: ูุญุงููุฉ ุงููุตูู ูุตูุญุงุช ุงูุฅุนุฏุงุฏุงุช...');
    
    const settingsTests = [
      '/settings',
      '/settings/roles', 
      '/settings/overview',
      '/settings/help',
      '/api/security/settings'
    ];

    for (const endpoint of settingsTests) {
      try {
        const response = await fetch(`${baseUrl}${endpoint}`, {
          headers: { 'Authorization': `Bearer ${adminToken}` }
        });
        
        if (response.status === 404) {
          console.log(`   โ ${endpoint}: ูุญุฐูู ุจูุฌุงุญ (404)`);
        } else {
          console.log(`   โ ${endpoint}: ูุง ุฒุงู ููุฌูุฏ! (${response.status})`);
        }
      } catch (error) {
        console.log(`   โ ${endpoint}: ูุญุฐูู ุจูุฌุงุญ (ุฎุทุฃ ุงุชุตุงู)`);
      }
    }

    // ุงุฎุชุจุงุฑ 3: ุงูุชุฃูุฏ ูู ุนูู ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช
    console.log('\n๐ก๏ธ ุงุฎุชุจุงุฑ 3: ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช...');
    
    const permResponse = await fetch(`${baseUrl}/api/permissions`, {
      headers: { 'Authorization': `Bearer ${adminToken}` }
    });
    
    if (permResponse.status === 200) {
      const permData = await permResponse.json();
      console.log('โ ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช ุชุนูู');
      console.log(`   ๐ ุงูุตูุงุญูุงุช ุงููุชุงุญุฉ: ${permData.stats.totalPermissions}`);
      console.log(`   ๐ด ุนุงููุฉ ุงูุฎุทูุฑุฉ: ${permData.stats.highRiskPermissions}`);
      console.log(`   ๐ข ููุฎูุถุฉ ุงูุฎุทูุฑุฉ: ${permData.stats.lowRiskPermissions}`);
    } else {
      console.log('โ ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช ูุง ุชุนูู');
    }

    // ุงุฎุชุจุงุฑ 4: ุงูุชุฃูุฏ ูู ุนูู ุงูุนูููุงุช ุงูุฃุณุงุณูุฉ
    console.log('\nโ๏ธ ุงุฎุชุจุงุฑ 4: ุงูุนูููุงุช ุงูุฃุณุงุณูุฉ...');
    
    const basicTests = [
      { endpoint: '/api/employees', name: 'ุงูููุธููู' },
      { endpoint: '/api/institutions', name: 'ุงููุคุณุณุงุช' },
      { endpoint: '/api/users', name: 'ุงููุณุชุฎุฏููู' }
    ];

    for (const test of basicTests) {
      const response = await fetch(`${baseUrl}${test.endpoint}`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      if (response.status === 200) {
        console.log(`   โ ${test.name}: ูุนูู ุจุดูู ุทุจูุนู`);
      } else {
        console.log(`   โ ${test.name}: ูุง ูุนูู (${response.status})`);
      }
    }

    // ุงุฎุชุจุงุฑ 5: ุชุณุฌูู ุงูุฏุฎูู ุจููุธู ุนุงุฏู
    console.log('\n๐ค ุงุฎุชุจุงุฑ 5: ุชุณุฌูู ุงูุฏุฎูู ุจููุธู ุนุงุฏู...');
    const empLogin = await fetch(`${baseUrl}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'test@company.com',
        password: 'test123'
      }),
    });

    const empData = await empLogin.json();
    if (empData.success) {
      console.log('โ ูุฌุญ ุชุณุฌูู ุฏุฎูู ุงูููุธู');
      console.log(`   ๐ ุงูุตูุงุญูุงุช: ${empData.user.permissions.join(', ')}`);
      
      // ุงูุชุฃูุฏ ูู ุนุฏู ูุฌูุฏ ุตูุงุญูุงุช ุฅุนุฏุงุฏุงุช
      const hasSettingsPermissions = empData.user.permissions.some(p => 
        p.includes('settings') || p.includes('system_')
      );
      
      if (!hasSettingsPermissions) {
        console.log('   โ ูุง ุชูุฌุฏ ุตูุงุญูุงุช ุฅุนุฏุงุฏุงุช ููููุธู');
      } else {
        console.log('   โ ูุง ุฒุงูุช ุชูุฌุฏ ุตูุงุญูุงุช ุฅุนุฏุงุฏุงุช!');
      }
    }

    console.log('\n๐ ุงูุชูู ุงุฎุชุจุงุฑ ุงููุธุงู ุจุฏูู ุฅุนุฏุงุฏุงุช!');
    console.log('\nโ ุชู ุญุฐู ูุณู ุงูุฅุนุฏุงุฏุงุช ููุงุฆูุงู:');
    console.log('   ๐๏ธ ุญุฐู ุฌููุน ุตูุญุงุช ุงูุฅุนุฏุงุฏุงุช');
    console.log('   ๐๏ธ ุญุฐู ุฌููุน APIs ุงูุฅุนุฏุงุฏุงุช');
    console.log('   ๐๏ธ ุญุฐู ุฌุฏูู security_settings');
    console.log('   ๐๏ธ ุฅุฒุงูุฉ ูุฑุงุฌุน ุงูุฅุนุฏุงุฏุงุช ูู ุงูููุงุฆู');
    console.log('   ๐๏ธ ุฅุฒุงูุฉ ุตูุงุญูุงุช ุงูุฅุนุฏุงุฏุงุช ูู ุงููุณุชุฎุฏููู');

    console.log('\n๐๏ธ ูุง ุชุจูู:');
    console.log('   โ ุฅุฏุงุฑุฉ ุงูุตูุงุญูุงุช ูููุฏูุฑูู ููุท');
    console.log('   โ ูุธุงู ุจุณูุท: ูุฏูุฑ ุฃู ููุธู');
    console.log('   โ ุชุญูู ูุงูู ูู ุงูุตูุงุญูุงุช ุงููุฑุฏูุฉ');

    await connection.end();

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error);
  }
}

testNoSettings();
