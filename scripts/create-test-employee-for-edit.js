const mysql = require('mysql2/promise');

async function createTestEmployeeForEdit() {
  let connection;
  
  try {
    connection = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '123',
      database: 'hr_system'
    });

    console.log('ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');

    // Get an institution for testing
    const [institutions] = await connection.execute(`
      SELECT id, name FROM institutions WHERE status = 'active' LIMIT 1
    `);

    const institutionId = institutions.length > 0 ? institutions[0].id : null;
    const institutionName = institutions.length > 0 ? institutions[0].name : 'ุบูุฑ ููููู';

    // Create test employee with all fields
    const testEmployee = {
      id: `emp-test-edit-${Date.now()}`,
      name: 'ุฃุญูุฏ ูุญูุฏ ุนูู ููุงุฎุชุจุงุฑ',
      mobile: '0501234567',
      email: 'ahmed.test@example.com',
      fileNumber: `TEST-EDIT-${Date.now()}`,
      nationality: 'ุณุนูุฏู',
      position: 'ูุทูุฑ ุจุฑูุฌูุงุช',
      salary: 8000,
      hireDate: '2024-01-15',
      institutionId: institutionId,
      institution: institutionName,
      status: 'active'
    };

    console.log('\n๐ค ุฅูุดุงุก ููุธู ุงุฎุชุจุงุฑ ููุชุนุฏูู:');
    console.log('='.repeat(50));
    console.log(`๐ ุงููุนุฑู: ${testEmployee.id}`);
    console.log(`๐ค ุงูุงุณู: ${testEmployee.name}`);
    console.log(`๐ฑ ุงูุฌูุงู: ${testEmployee.mobile}`);
    console.log(`๐ง ุงูุจุฑูุฏ: ${testEmployee.email}`);
    console.log(`๐ณ๏ธ ุงูุฌูุณูุฉ: ${testEmployee.nationality}`);
    console.log(`๐ผ ุงูููุตุจ: ${testEmployee.position}`);
    console.log(`๐ฐ ุงูุฑุงุชุจ: ${testEmployee.salary} ุฑูุงู`);
    console.log(`๐ ุชุงุฑูุฎ ุงูุชูุธูู: ${testEmployee.hireDate}`);
    console.log(`๐ข ุงููุคุณุณุฉ: ${testEmployee.institution}`);

    // Insert test employee
    const insertResult = await connection.execute(`
      INSERT INTO employees (
        id, name, mobile, email, file_number, nationality, position, 
        salary, hire_date, institution_id, institution, status,
        created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    `, [
      testEmployee.id,
      testEmployee.name,
      testEmployee.mobile,
      testEmployee.email,
      testEmployee.fileNumber,
      testEmployee.nationality,
      testEmployee.position,
      testEmployee.salary,
      testEmployee.hireDate,
      testEmployee.institutionId,
      testEmployee.institution,
      testEmployee.status
    ]);

    if (insertResult.affectedRows > 0) {
      console.log('\nโ ุชู ุฅูุดุงุก ููุธู ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ!');

      // Verify the created employee
      const [created] = await connection.execute(`
        SELECT id, name, mobile, email, nationality, position, salary, hire_date, institution
        FROM employees 
        WHERE id = ?
      `, [testEmployee.id]);

      if (created.length > 0) {
        const emp = created[0];
        console.log('\n๐ ุชุฃููุฏ ุงูุจูุงูุงุช ุงููุญููุธุฉ:');
        console.log('='.repeat(50));
        console.log(`๐ค ุงูุงุณู: ${emp.name}`);
        console.log(`๐ฑ ุงูุฌูุงู: ${emp.mobile}`);
        console.log(`๐ง ุงูุจุฑูุฏ: ${emp.email}`);
        console.log(`๐ณ๏ธ ุงูุฌูุณูุฉ: ${emp.nationality}`);
        console.log(`๐ผ ุงูููุตุจ: ${emp.position}`);
        console.log(`๐ฐ ุงูุฑุงุชุจ: ${emp.salary} ุฑูุงู`);
        console.log(`๐ ุชุงุฑูุฎ ุงูุชูุธูู: ${emp.hire_date}`);
        console.log(`๐ข ุงููุคุณุณุฉ: ${emp.institution}`);

        console.log('\n๐ฏ ุฎุทูุงุช ุงูุงุฎุชุจุงุฑ:');
        console.log('='.repeat(50));
        console.log('1. ุงุฐูุจ ุฅูู ุตูุญุฉ ุงูููุธููู: http://localhost:9004/employees');
        console.log('2. ุงุจุญุซ ุนู ุงูููุธู: "ุฃุญูุฏ ูุญูุฏ ุนูู ููุงุฎุชุจุงุฑ"');
        console.log('3. ุงููุฑ ุนูู โฎ ุจุฌุงูุจ ุงูููุธู');
        console.log('4. ุงุฎุชุฑ "ุชุนุฏูู"');
        console.log('5. ุฌุฑุจ ุชุนุฏูู ุฌููุน ุงูุญููู:');
        console.log('   โข ุงูุงุณู');
        console.log('   โข ุงูุฌูุณูุฉ');
        console.log('   โข ุฑูู ุงูุฌูุงู');
        console.log('   โข ุงูุจุฑูุฏ ุงูุฅููุชุฑููู');
        console.log('   โข ุงูููุตุจ');
        console.log('   โข ุงูุฑุงุชุจ');
        console.log('   โข ุงููุคุณุณุฉ');
        console.log('   โข ุชุงุฑูุฎ ุงูุชูุธูู');
        console.log('6. ุงููุฑ "ุญูุธ ุงูุชุบููุฑุงุช"');
        console.log('7. ุชุฃูุฏ ูู ุญูุธ ุงูุชุบููุฑุงุช ุจูุฌุงุญ');

        console.log('\n๐ ุฑุงุจุท ูุจุงุดุฑ ูุตูุญุฉ ุชูุงุตูู ุงูููุธู:');
        console.log(`http://localhost:9004/employees/${testEmployee.id}`);

        console.log('\n๐ก ูุตุงุฆุญ ููุงุฎุชุจุงุฑ:');
        console.log('โข ุฌุฑุจ ุชุนุฏูู ุญูู ูุงุญุฏ ููุท');
        console.log('โข ุฌุฑุจ ุชุนุฏูู ุนุฏุฉ ุญููู ูุนุงู');
        console.log('โข ุฌุฑุจ ุชุฑู ุจุนุถ ุงูุญููู ูุงุฑุบุฉ');
        console.log('โข ุฌุฑุจ ุชุบููุฑ ุงููุคุณุณุฉ ูู ูุฅูู "ุบูุฑ ููููู"');
        console.log('โข ุชุฃูุฏ ูู ุฑุณุงุฆู ุงููุฌุงุญ ูุงูุฎุทุฃ');
      }
    } else {
      console.log('โ ูุดู ูู ุฅูุดุงุก ููุธู ุงูุงุฎุชุจุงุฑ');
    }

  } catch (error) {
    console.error('ุฎุทุฃ ูู ุฅูุดุงุก ููุธู ุงูุงุฎุชุจุงุฑ:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('\nุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    }
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
createTestEmployeeForEdit();
